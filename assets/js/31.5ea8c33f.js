(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{482:function(e,s,t){"use strict";t.r(s);var n=t(1),a=Object(n.a)({},function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"node-js"}},[e._v("node.js")]),e._v(" "),t("h2",{attrs:{id:"webpack"}},[e._v("webpack")]),e._v(" "),t("p",[e._v("webpack把多种静态资源转换成一个静态文件")]),e._v(" "),t("h3",{attrs:{id:"的含义"}},[e._v("@ 的含义")]),e._v(" "),t("p",[e._v("在webpack的配置中")]),e._v(" "),t("highlight-code",{attrs:{lang:"js"}},[t("pre",[t("code",[e._v("resolve: {\n  extensions: ['.js', '.vue', '.json'],\n  alias: {\n    '@': resolve('src'),\n  }\n}\n")])])]),e._v(" "),e._m(0),e._v(" "),t("h3",{attrs:{id:"修改编译路径"}},[e._v("修改编译路径")]),e._v(" "),t("p",[e._v("编译路径修改（由于存在编译出来的文件相互依赖的，而你只导入其中几个，依赖就出问题了，为了不修改后端代码，修改通用编译路径是不错的解决方案）")]),e._v(" "),t("highlight-code",{attrs:{lang:"js"}},[t("pre",[t("code",[e._v("assetsRoot: path.resolve(__dirname, '../static/dist'),\nassetsSubDirectory: '',\nassetsPublicPath: '/static/dist/',\nproductionSourceMap: false,\n")])])]),e._v(" "),t("h2",{attrs:{id:"babel"}},[e._v("Babel")]),e._v(" "),t("p",[e._v("一个转码器，将es6转es5，这个东西何用？node.js直接执行es6代码还存在问题，听说最新版本可以了。所以用es6来写js，这样可以利用它的新特性，然后转码，这样node.js就可以运行了。")])],1)},[function(){var e=this.$createElement,s=this._self._c||e;return s("p",[this._v("这样在需要导入组件的时候使用 "),s("code",[this._v("import A from '@/components/a.vue'")]),this._v(" 就是给复杂了引用路径做个别名。")])}],!1,null,null,null);a.options.__file="node.md";s.default=a.exports}}]);