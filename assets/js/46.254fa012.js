(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{497:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"mongodb"}},[t._v("MongoDB")]),t._v(" "),t._m(0),t._v(" "),n("h2",{attrs:{id:"objectid字段"}},[t._v("ObjectID字段")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),n("h2",{attrs:{id:"查询"}},[t._v("查询")]),t._v(" "),t._m(6),t._v(" "),n("h3",{attrs:{id:"projection"}},[t._v("projection")]),t._v(" "),n("p",[t._v("该参数指明要显示的字段或者要隐藏的字段")]),t._v(" "),t._m(7),t._v(" "),n("h2",{attrs:{id:"内嵌文档"}},[t._v("内嵌文档")]),t._v(" "),n("p",[t._v("见文档")]),t._v(" "),n("h2",{attrs:{id:"数据库引用"}},[t._v("数据库引用")]),t._v(" "),n("p",[t._v("分为手动引用和DBRefs，手动引用就是自己建立关系，然后查多次或关联查询。")]),t._v(" "),n("p",[t._v("使用方法：")]),t._v(" "),t._m(8),t._v(" "),n("p",[t._v("产品document中引用attr_data，attr_data是产品属性document")]),t._v(" "),n("p",[t._v("products document")]),t._v(" "),n("HightCode",[[t._v('\n@blueprint.route(\'/get/classify/list\', methods=[\'POST\'])\n@auth_token_required\ndef get_classify_list():\n    """\n    根据页码、搜索条件查询指定数目记录\n    :return:\n    """\n    logging.info("get_classify_list")\n    response_dict = {}\n    try:\n        params = request.get_json()\n        page = params.get("page")\n        per_page = params.get("per_page")\n        # 获取查询条件\n        search_data = params.get("search_data")\n        classify_list = ProductClassify.get_classify_list_by_data(page, per_page, search_data)\n        response_data_list = format_classify_info(classify_list)\n        response_dict["code"] = response.SUCCESS\n        response_dict["msg"] = response.RESULT_SUCCESS\n        response_dict["data"] = response_data_list\n    except Exception as e:\n        logging.debug(e)\n        response_dict["code"] = response.ERROR\n        response_dict["msg"] = response.RESULT_ERROR\n        response_dict["data"] = []\n    finally:\n        return jsonify(response_dict)\n')]],2),t._v(" "),t._m(9),t._m(10),n("p",[t._v("product_attr document")]),t._v(" "),t._m(11),n("p",[t._v("查询")]),t._v(" "),t._m(12),n("h2",{attrs:{id:"原子操作"}},[t._v("原子操作")]),t._v(" "),n("p",[t._v("mongodb不支持事务，所以，在你的项目中应用时，要注意这点。无论什么设计，都不要要求mongodb保证数据的完整性。")]),t._v(" "),n("p",[t._v("但是mongodb提供了许多原子操作，比如文档的保存，修改，删除等，都是原子操作。")]),t._v(" "),n("p",[t._v("所谓原子操作就是要么这个文档保存到Mongodb，要么没有保存到Mongodb，不会出现查询到的文档没有保存完整的情况。")]),t._v(" "),n("h3",{attrs:{id:"findandmodify方法"}},[t._v("findAndModify方法")]),t._v(" "),n("p",[t._v("该方法将查询一些结果，如果查询到，执行更新。这些语句都是写在一个查询中的，并且使用对应的原子操作方法，让整个findAndModify实现原子性操作。\n如果分开操作，就是先查询，再修改，在这两个操作之间，如果有人购买了产品，导致库存不足，那么修改操作就会导致数据库数据一致性问题。")]),t._v(" "),t._m(13),n("p",[t._v("对于上述的book模型，available是我们的判别标志，当它大于0的时候，说明是可以操作的(比如借书)，这部分就是查询，查询成功了，就可以去执行要更新的操作。\ndb.document.findAndModify({\nquery: {},\nupdate: {}\n})\n更新操作应该使用原子操作命令")]),t._v(" "),n("p",[t._v("$set:用来指定一个键并更新键值，若键不存在并创建。")]),t._v(" "),n("p",[t._v("{ $set : { field : value } }\n  $unset:用来删除一个键")]),t._v(" "),n("p",[t._v("{ $unset : { field : 1} }\n  $inc:可以对文档的某个值为数字型的键进行增减操作")]),t._v(" "),n("p",[t._v("{ $inc : { field : value } }\n  $push：把value追加到field里面去，field一定要是数组类型才行，如果field不存在，会新增一个数据类型加进去。")]),t._v(" "),n("p",[t._v("{ $push : { field : value } }\n  $pushAll:同$push,只是一次可以追加到多个值到一个数组字段内。")]),t._v(" "),n("p",[t._v("{ $pushAll : { field : value_array } }\n  $pull:从数组field内删除一个等于value值")]),t._v(" "),n("p",[t._v("{ $pull : { field : _value } }\n  $addToSet：增加一个值到数组内，而且只有当这个值不在数组内才增加。\n  $pop：删除数组的第一个或最后一个元素\n{ $pop : { field : 1 } }\n  $rename：修改字段名称\n{ $rename : { old_field_name : new_field_name } }\n  $bit：位操作，integer类型\n{$bit : { field : {and : 5}}}\n  偏移操作符")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),n("h2",{attrs:{id:"索引"}},[t._v("索引")]),t._v(" "),n("p",[t._v("MongoDB通过索引加快查询速度，索引运行在内存中，数据库的操作也需要对索引进行操作，索引超过内存的情况，将会删除一些索引。最好只对大数据文档创建索引。")]),t._v(" "),n("p",[t._v("索引不能被以下的查询使用：")]),t._v(" "),t._m(17),t._v(" "),n("p",[t._v("所以，检测你的语句是否使用索引是一个好的习惯，可以用explain来查看。")]),t._v(" "),n("h3",{attrs:{id:"最大范围"}},[t._v("最大范围")]),t._v(" "),t._m(18)],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"/my-notebook/images/mongodb/MongoDB.png",alt:"image"}})])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("ObjectId")]),t._v("构成我们使用"),n("code",[t._v("MySQL")]),t._v("等关系型数据库时，主键都是设置成自增的。但在分布式环境下，这种方法就不可行了，会产生冲突。为此，"),n("code",[t._v("MongoDB")]),t._v("采用了一个称之为"),n("code",[t._v("ObjectId")]),t._v("的类型来做主键。"),n("code",[t._v("ObjectId")]),t._v("是一个12字节的"),n("code",[t._v("BSON")]),t._v("类型字符串。按照字节顺序，依次代表：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("4字节：UNIX时间戳")]),this._v(" "),s("li",[this._v("3字节：表示运行MongoDB的机器")]),this._v(" "),s("li",[this._v("2字节：表示生成此_id的进程")]),this._v(" "),s("li",[this._v("3字节：由一个随机数开始的计数器生成的值")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("p",[n("code",[t._v("MongoDB")]),t._v("对"),n("code",[t._v("ObjectId")]),t._v("对象提供了"),n("code",[t._v("getTimestamp()")]),t._v("方法来获取"),n("code",[t._v("ObjectId")]),t._v("的时间。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这里不使用自增长"),s("code",[this._v("id")]),this._v("主要是因为"),s("code",[this._v("MongoDB")]),this._v("是分布式数据库，在并发插入的时候需要维护全局的唯一ID，传统的像MySQL是单机版的，使用自增长ID可以了，处理多条数据插入加锁就行了，虽然MySQL也可以部署集群，但是这种情况ID就没用了，需要自定义全局唯一字段。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("ObjectID")]),this._v("是字段类型，通常来说它是按照默认规则来生产的，文档中的其它字段也可以使用这种字段类型。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("查询全部："),s("code",[this._v("db.document.find({})")])]),this._v(" "),s("li",[this._v("查询字段是对象的："),s("code",[this._v("db.document.find({'id_card.idcard_type': '身份证'})")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("db.document.find({}, {'name':1})")]),this._v("  返回结果只显示name字段")]),this._v(" "),s("li",[s("code",[this._v("db.document.find({}, {'name':0})")]),this._v("  返回结果把name字段隐藏了，其它展示出来")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("$ref：集合名称")]),this._v(" "),s("li",[this._v("$id：引用的id")]),this._v(" "),s("li",[this._v("$db:数据库名称，可选参数")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" collections "),n("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" namedtuple\nPoint "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" namedtuple"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'Point'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'x'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'y'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\np "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Point"),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("11")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("22")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" p\n"),n("span",{attrs:{class:"token keyword"}},[t._v("print")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n    "),n("span",{attrs:{class:"token string"}},[t._v('"_id"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{attrs:{class:"token function"}},[t._v("ObjectId")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"53402597d852426020000002"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"product_name"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"卫龙辣条"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token string"}},[t._v('"attr_data"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{attrs:{class:"token string"}},[t._v('"$ref"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"product_attr"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token string"}},[t._v('"$id"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token function"}},[t._v("ObjectId")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"534009e4d852427820000002"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{attrs:{class:"token string"}},[t._v('"$db"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"testdata"')]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{attrs:{class:"token property"}},[t._v('"_id"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectId("),n("span",{attrs:{class:"token string"}},[t._v('"534009e4d852427820000002"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),n("span",{attrs:{class:"token property"}},[t._v('"size"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"大"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),n("span",{attrs:{class:"token property"}},[t._v('"weight"')]),n("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"100g"')]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('var product = db.products.findOne({"product_name":"卫龙辣条"})\nvar dbRef = product.attr_data\ndb[dbRef.$ref].findOne({"_id":(dbRef.$id)})\n结果：\n{\n   "_id" : ObjectId("534009e4d852427820000002"),\n   "size": "大",\n   "weight": "100g"\n}\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('book = {\n          _id: 123456789,\n          title: "MongoDB: The Definitive Guide",\n          author: [ "Kristina Chodorow", "Mike Dirolf" ],\n          published_date: ISODate("2010-09-24"),\n          pages: 216,\n          language: "English",\n          publisher_id: "oreilly",\n          available: 3,\n          checkout: [ { by: "joe", date: ISODate("2012-10-15") } ]\n        }\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v('t.find() { "_id" : ObjectId("4b97e62bf1d8c7152c9ccb74"), "title" : "ABC", "comments" : [ { "by" : "joe", "votes" : 3 }, { "by" : "jane", "votes" : 7 } ] }')])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("t.update( {'comments.by':'joe'}, {$inc:{'comments.$.votes':1}}, false, true )")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v('t.find() { "_id" : ObjectId("4b97e62bf1d8c7152c9ccb74"), "title" : "ABC", "comments" : [ { "by" : "joe", "votes" : 4 }, { "by" : "jane", "votes" : 7 } ] }')])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("正则表达式及非操作符，如 $nin, $not, 等")]),this._v(" "),s("li",[this._v("算术运算符，如 $mod, 等")]),this._v(" "),s("li",[this._v("$where 子句")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("集合中索引不能超过64个")]),this._v(" "),s("li",[this._v("索引名的长度不能超过128个字符")]),this._v(" "),s("li",[this._v("一个复合索引最多可以有31个字段")])])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);