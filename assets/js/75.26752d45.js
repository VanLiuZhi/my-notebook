(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{526:function(t,e,n){"use strict";n.r(e);var i=n(1),l=Object(i.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"利用docker快速构建开发环境"}},[t._v("利用Docker快速构建开发环境")]),t._v(" "),n("h2",{attrs:{id:"序言"}},[t._v("序言")]),t._v(" "),n("p",[t._v("Docker是很不错的容器技术，利用Docker可用快速构建一个开发环境，这样的好处在于一台新的电脑，只要安装了Docker软件，搭建环境就是几个命令的事，这样整个开发团队都会在同样的环境下进行，而且部署的时候，运维的同学只需要针对安全性做一些调整即可上线。以Python语言为例，一个小团队的技术栈差不多会用到以下的东西：")]),t._v(" "),t._m(0),t._v(" "),n("h2",{attrs:{id:"dockerfile"}},[t._v("Dockerfile")]),t._v(" "),n("highlight-code",{attrs:{lang:"Dockerfile"}},[n("pre",[n("code",[t._v('FROM python:3.7\nLABEL author="liuzhi<1441765847.com>"\n\n# 换源，Python镜像基于Debian，使用阿里的Debian源\nRUN rm /etc/apt/sources.list\nCOPY sources.list /etc/apt/sources.list\n\n# 运行命令，安装常用软件\nRUN apt-get update \\\n    # 修改时区\n    && ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime \\\n    # && apt-get install -y apt-utils \\\n    # && apt-get install -y wget \\\n    && apt-get install -y zsh \\\n    && chsh -s /bin/zsh root \\\n    && apt-get install -y curl \\\n    && apt-get install -y git \\\n    && apt-get install -y vim \n\n# 安装zsh的扩展\nRUN sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"  || true\n\nENV FLASK_ENV dev\nENV APP_DIR /code\nWORKDIR /code/\nEXPOSE 5000\n')])])]),t._v(" "),n("p",[t._v("注意事项：")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("这里使用了官方的Python镜像，体积有点大，好处是装软件一般不会出问题了，作为开发用就不在精简体积上花时间了。")])],1)},[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ol",[n("li",[t._v("Python环境，包括各种需要的包")]),t._v(" "),n("li",[t._v("数据库，包括MySQL、MongoDB等")]),t._v(" "),n("li",[t._v("缓存服务，使用Redis等")]),t._v(" "),n("li",[t._v("任务队列，使用celery，RabbitMQ")]),t._v(" "),n("li",[t._v("Http服务器，Nginx")]),t._v(" "),n("li",[t._v("WSGI服务器，gunicorn，uwsgi")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("记得在同级目录下装备源文件 "),n("code",[t._v("sources.list")])])]),t._v(" "),n("li",[n("p",[t._v("有时候会提示需要安装 "),n("code",[t._v("apt-utils")]),t._v("，不过我这里是基于Debian的，这东西还装不上，没有apt-utils，安装不了第三方包，wget安装失败了，可用进入容器自行安装wget")])]),t._v(" "),n("li",[n("p",[t._v("RUN命令中通过 "),n("code",[t._v("&&")]),t._v(" 连接命令，因为在Docker中，每一个指令都会构建一层，因此尽量将命令都放在一个RUN指令中，用 && 来串联。还有命令后面的 "),n("code",[t._v("\\")]),t._v(" 符最后就不需要写了，不然和下面的命令连起来了，如果你使用Dockerfile静态语法检查工具，有错误提示的（xcode安装插件即可编写Dockerfile，错误的地方会有提示）")])]),t._v(" "),n("li",[n("p",[t._v("这里还安装了zsh的扩展，使用了 "),n("code",[t._v("||")]),t._v(" ，不用直接安装镜像创建会失败，我猜测可能是这个命令后面没接上，不用 "),n("code",[t._v("||")]),t._v(" 可以看到安装信息是成功了的，但是容器创建会失败，太具体的情况不知道了，安装了zsh，启动容器的时候记得通过 "),n("code",[t._v("/bin/zsh")]),t._v(" 进入")])])])}],!1,null,null,null);l.options.__file="docker-dev.md";e.default=l.exports}}]);