(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{521:function(t,_,e){"use strict";e.r(_);var v=e(1),i=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"http-协议"}},[t._v("HTTP 协议")]),t._v(" "),e("p",[t._v("超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准。")]),t._v(" "),e("h2",{attrs:{id:"http-action"}},[t._v("http action")]),t._v(" "),e("p",[t._v("HTTP协议中GET、POST和HEAD的介绍  2008-05-10 14:15")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("GET")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求指定的页面信息，并返回实体主体。")])]),t._v(" "),e("tr",[e("td",[t._v("HEAD")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("只请求页面的首部。")])]),t._v(" "),e("tr",[e("td",[t._v("POST")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器接受所指定的文档作为对所标识的URI的新的从属实体。")])]),t._v(" "),e("tr",[e("td",[t._v("PUT")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("从客户端向服务器传送的数据取代指定的文档的内容。")])]),t._v(" "),e("tr",[e("td",[t._v("DELETE")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器删除指定的页面。")])]),t._v(" "),e("tr",[e("td",[t._v("OPTIONS")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("允许客户端查看服务器的性能。")])]),t._v(" "),e("tr",[e("td",[t._v("TRACE")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器在响应中的实体主体部分返回所得到的内容。")])]),t._v(" "),e("tr",[e("td",[t._v("PATCH")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("实体中包含一个表，表中说明与该URI所表示的原内容的区别。")])]),t._v(" "),e("tr",[e("td",[t._v("MOVE")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器将指定的页面移至另一个网络地址。")])]),t._v(" "),e("tr",[e("td",[t._v("COPY")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器将指定的页面拷贝至另一个网络地址。")])]),t._v(" "),e("tr",[e("td",[t._v("LINK")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("请求服务器建立链接关系。")])]),t._v(" "),e("tr",[e("td",[t._v("UNLINK")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("断开链接关系。")])]),t._v(" "),e("tr",[e("td",[t._v("WRAPPED")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("允许客户端发送经过封装的请求。")])]),t._v(" "),e("tr",[e("td",[t._v("Extension-mothed")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("在不改动协议的前提下，可增加另外的方法。")])])])]),t._v(" "),e("h2",{attrs:{id:"三次握手，四次挥手"}},[t._v("三次握手，四次挥手")]),t._v(" "),e("p",[t._v("三次握手：A向B发起连接，B收到，回一个给A，A也收到，连接确定")]),t._v(" "),e("ol",[e("li",[t._v("第一次握手：建立连接时，客户端发送syn包（syn=j）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。")]),t._v(" "),e("li",[t._v("第二次握手：服务器收到syn包，必须确认客户的SYN（ack=j+1），同时自己也发送一个SYN包（syn=k），即SYN+ACK包，此时服务器进入SYN_RECV状态；")]),t._v(" "),e("li",[t._v("第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。")])]),t._v(" "),e("p",[t._v("完成三次握手，客户端与服务器开始传送数据。")]),t._v(" "),e("p",[t._v("建立连接是三次握手，释放连接是四次挥手（关闭连接）")]),t._v(" "),e("ol",[e("li",[t._v("第一步，当主机A的应用程序通知TCP数据已经发送完毕时，TCP向主机B发送一个带有FIN附加标记的报文段（FIN表示英文finish）。")]),t._v(" "),e("li",[t._v("第二步，主机B收到这个FIN报文段之后，并不立即用FIN报文段回复主机A，而是先向主机A发送一个确认序号ACK，同时通知自己相应的应用程序：对方要求关闭连接（先发送ACK的目的是为了防止在这段时间内，对方重传FIN报文段）。")]),t._v(" "),e("li",[t._v("第三步，主机B的应用程序告诉TCP：我要彻底的关闭连接，TCP向主机A送一个FIN报文段。")]),t._v(" "),e("li",[t._v("第四步，主机A收到这个FIN报文段后，向主机B发送一个ACK表示连接彻底释放。")])]),t._v(" "),e("h2",{attrs:{id:"状态码"}},[t._v("状态码")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("2xx")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("成功")])]),t._v(" "),e("tr",[e("td",[t._v("3xx")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("重定向")])]),t._v(" "),e("tr",[e("td",[t._v("4xx")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("客户端问题")])]),t._v(" "),e("tr",[e("td",[t._v("5xx")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("服务端问题")])])])]),t._v(" "),e("h2",{attrs:{id:"get-和-post"}},[t._v("get 和 post")]),t._v(" "),e("ol",[e("li",[t._v("get是从服务器上获取数据，post是向服务器传送数据。")]),t._v(" "),e("li",[t._v("get是把参数数据队列加到提交表单的ACTION属性所指的URL中，值和表单内各个字段一一对应，在URL中可以看到。post是通过HTTP post机制，将表单内各个字段与其内容放置在HTML HEADER内一起传送到ACTION属性所指的URL地址。用户看不到这个过程。")]),t._v(" "),e("li",[t._v("对于get方式，服务器端用Request.QueryString获取变量的值，对于post方式，服务器端用Request.Form获取提交的数据。")]),t._v(" "),e("li",[t._v("get传送的数据量较小，不能大于2KB。post传送的数据量较大，一般被默认为不受限制。但理论上，IIS4中最大量为80KB，IIS5中为100KB。")]),t._v(" "),e("li",[t._v("get安全性非常低，post安全性较高。但是执行效率却比Post方法好。")])]),t._v(" "),e("p",[t._v("建议：\n1、get方式的安全性较Post方式要差些，包含机密信息的话，建议用Post数据提交方式；\n2、在做数据查询时，建议用Get方式；而在做数据添加、修改或删除时，建议用Post方式；")])])}],!1,null,null,null);i.options.__file="http-protocol.md";_.default=i.exports}}]);